programa{
  inclua biblioteca Util --> u
  funcao inicio(){

//=-=-Variaveis de informaÃ§Ãµes=-=-

    inteiro pos[5][5] // 1 = nada  2 = navio achado = limpo 4 onde eu to 
    logico navios [5][5]
    inteiro i = 1
    logico n[5][5]
    inteiro pontos
    inteiro melhor = 0

  //=-=-=Variaveis jogaveis=-=-

    inteiro vida = 5
    inteiro pontos = 0
    cadeia jogada
    inteiro li = 0 , co = 0
    logico vidas = verdadeiro
    cadeia nome 
    inteiro op

  //=-=-=Resetar numeros=-=-=

    para (inteiro l = 0; l<5; l++){
			para (inteiro c = 0; c < 5; c++){	
        pos[l][c] = 3
      }
    }  

  //=-=-=-PosiÃ§Ãµes dos navios=-=-=-=

  //=-=-Navio 1 
  navios[0][1] = verdadeiro
  navios[1][1] = verdadeiro 

  //=-=-Navio 2 
  navios[0][4] = verdadeiro  
  navios[1][4] = verdadeiro  

  //=-=-Navio 3 
  navios[3][1] = verdadeiro 
  navios[3][2] = verdadeiro 

  //=-=-Navio 4 
  navios[4][0] = verdadeiro 
  navios[4][1] = verdadeiro 
  navios[4][2] = verdadeiro 

  //=-=-Navio 5
  navios[4][4] = verdadeiro

   
  //=-=-Mapa=-=-=  ðŸŸ¦ = 1 ðŸš¢ = 2
      i = 1
  enquanto(vidas){
      limpa()
    escreva("Aperte W para ir para cima A para ir para a esquerda S para ir para baixo e S para ir para a direita, Boa sorte!\n")
    enquanto(vida > 0){
      escreva("Vidas: ",vida," \n")
      escreva("   1  2   3  4   5 \n")
      para (inteiro linha = 0; linha <5; linha++){
        escreva(i++," ")
        para (inteiro coluna = 0; coluna < 5; coluna++){		
          se(pos[linha][coluna] == 1){
          escreva("ðŸŸ¦ ")   
          }
          senao se(pos[linha][coluna] == 2){
            escreva("ðŸš¢ ")
            pontos = pontos + 100
          }
          senao se(pos[linha][coluna] == 4){
            escreva("âš« ")
          }
          senao{
            escreva("ðŸŒŠ ")
          }
        }
        escreva("\n")
      }
      leia(jogada)
       limpa()
      

      escolha (jogada)
      {
        caso "w"
         li--
         se(li<0 ou li>5){
          li = 4
          escreva("Jogada Invalida!!")
          pare
         }
         pos[li][co] = 4
        pare

        caso "s" 
         li++
         pos[li][co] = 4
        pare

        caso "a"
         co--
         pos[li][co] = 4
        pare

        caso "d"
         co++ 
         pos[li][co] = 4
        pare

        caso contrario
          escreva("opÃ§Ã£o invalida\n")
          leia(jogada)
        pare
      }
      i = 1
      escreva("Vidas: ",vida," \n")
      escreva("   1  2   3  4   5 \n")
      para (inteiro linha = 0; linha <5; linha++){
        escreva(i++," ")
        para (inteiro coluna = 0; coluna < 5; coluna++){		
          se(pos[linha][coluna] == 1){
          escreva("ðŸŸ¦ ")   
          }
          senao se(pos[linha][coluna] == 2){
            escreva("ðŸš¢ ")
            pontos = pontos + 100
          }
          senao se(pos[linha][coluna] == 4){
            escreva("âš« ")
          }
          senao{
            escreva("ðŸŒŠ ")
          }
        }
        escreva("\n")
      }
      limpa()

     

      n[li][co] = verdadeiro

      se(n[li][co] == navios[li][co]){
        pos[li][co] = 2 
        
      }
        senao{
          pos[li][co] = 1
          vida--
      }
    }
//=-=-=-Pontos tabela-=-=-=
    limpa()
    escreva("Digite um nome para salvar os pontos!!!\nNome: ")
    leia(nome)
    escreva("=-=-Tabela de Pontos=-=-\n")
    se(pontos>melhor){
      escreva("Parece que temos um novo marco de pontos PARABENS!!!ðŸŽ‰ðŸŽ‰ðŸŽ‰\n\n")
      melhor = pontos
    }
    senao{
      escreva("NÃ£o foi dessa vez, continue tentando para ficar em melhor!")
    }
    escreva("Melhor PontuaÃ§Ã£o: ",nome,": ",melhor,"\n")
    escreva("PontuaÃ§Ã£o Atual: ",nome," ",pontos)
    escreva("\n\nDeseja jogar de novo?\n1) Sim \n2) NÃ¢o\n")
    leia(op)
    se(op == 1){
      i = 1
      vidas = verdadeiro
      vida = 5
      li = 0 
      co = 0
      para (inteiro l = 0; l<5; l++){
			para (inteiro c = 0; c < 5; c++){	
        pos[l][c] = 3
      }
    }  

    }
    senao{
      vidas = falso
    }
  } 
  }
}
